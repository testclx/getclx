if _G.AimAssistScriptLoaded then
    warn("Script déjà chargé, arrêt de l'exécution.")
    return
end
_G.AimAssistScriptLoaded = true

local Players = game:GetService("Players")
local LP
local success, err = pcall(function()
    repeat
        LP = Players.LocalPlayer
        wait()
    until LP and LP.Parent
end)
if not success then
    warn("Erreur lors du chargement du LocalPlayer : " .. tostring(err))
    return
end

local TS = game:GetService("TweenService")
local UIS = game:GetService("UserInputService")
local RS = game:GetService("RunService")
local Camera = workspace.CurrentCamera
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local Settings = {
    SilentAimFOV = 4.5,
    SilentAimHitbox = {"Head", "HumanoidRootPart"},
    SilentAimFOVColor = Color3.fromRGB(0, 255, 0),
    Prediction = {0.13544, 0.13544, 0.13544},
    TriggerBotFOV = 300,
    TriggerBotHitbox = {"Head", "HumanoidRootPart"},
    TriggerBotFOVColor = Color3.fromRGB(0, 0, 255),
    Keybinds = {
        CloseMenu = Enum.KeyCode.M,
        ToggleSilentAim = Enum.KeyCode.V,
        ToggleTriggerBot = Enum.KeyCode.C
    },
    ResolverVelocityThreshold = 50
}

local States = {
    SilentAim = false,
    TriggerBot = false,
    SilentAimFOVVisible = false,
    TriggerBotFOVVisible = false
}
local isUnlocked = true
local silentTarget = nil
local silentHitbox = nil
local triggerTargets = {}
local previousPositions = {}
local previousTimes = {}

local List = {
    [16469595315] = {'Del Hood Aim', 'UpdateMousePos', 'MainEvent'},
    [17319408836] = {'OG Da Hood', 'UpdateMousePos', 'MainEvent'},
    [14975320521] = {'Ar Hood', 'UpdateMousePos', 'MainEvent'},
    [17200018150] = {'Hood Of AR', 'UpdateMousePos', 'MainEvent'},
    [15644861772] = {'Flame Hood', 'UpdatQeMousePos', 'MainEvent'},
    [17723797487] = {'Dee Hood', 'UpdateMousePosI', 'MainEvent'},
    [17897702920] = {'Og Da Hood', 'UpdateMousePos', 'MainEvent'},
    [17809101348] = {'New Hood', 'UpdateMousePos', 'MainEvent'},
    [17344804827] = {'Yeno Hood', 'UpdateMousePos', 'MainEvent'},
    [16435867341] = {'Mad Hood', 'UpdateMousePos', 'MainEvent'},
    [14412601883] = {'Hood Bank', 'MOUSE', 'MAINEVENT'},
    [84366677940861] = {'Da Uphill', 'MOUSE', 'MAINEVENT'},
    [14487637618] = {'Da Hood Bot Aim Trainer', 'MOUSE', 'MAINEVENT'},
    [11143225577] = {'1v1 Hood Aim Trainer', 'UpdateMousePos', 'MainEvent'},
    [14413712255] = {'Hood Aim', 'MOUSE', 'MAINEVENT'},
    [12927359803] = {'Dah Aim Trainer', 'UpdateMousePos', 'MainEvent'},
    [12867571492] = {'Katana Hood', 'UpdateMousePos', 'MainEvent'},
    [11867820563] = {'Dae Hood', 'UpdateMousePos', 'MainEvent'},
    [17109142105] = {'Da Battles', 'MoonUpdateMousePos', 'MainEvent'},
    [15186202290] = {'Da Strike', 'MOUSE', 'MAINEVENT'},
    [2788229376] = {'Da Hood', 'UpdateMousePosI', 'MainEvent'},
    [16033173781] = {'Da Hood Macro', 'UpdateMousePosI', 'MainEvent'},
    [7213786345] = {'Da Hood VC', 'UpdateMousePosI', 'MainEvent'},
    [9825515356] = {'Hood Customs', 'MousePosUpdate', 'MainEvent'},
    [17895632819] = {'Hood Spirit', 'UpdateMousePos', 'MainEvent'},
    [5602055394] = {'Hood Modded', 'MousePos', 'Bullets'},
    [7951883376] = {'Hood Modded VC', 'MousePos', 'Bullets'},
    [9183932460] = {'Untitled Hood', 'UpdateMousePos', '.gg/untitledhood'},
    [14412355918] = {'Da Downhill', 'MOUSE', 'MAINEVENT'}
}

if not List[game.PlaceId] then
    warn("Ce jeu (PlaceId: " .. game.PlaceId .. ") n'est pas supporté par ce script.")
    return
end

local gui, mainFrame, silentAimFrame, triggerBotFrame, 
      triggerBotLabel, silentAimLabel, silentAimFOVLabel,
      triggerBotFOVToggle, silentAimFOVToggle, scrollingFrame

local function createGui()
    local success, result = pcall(function()
        local gui = Instance.new("ScreenGui")
        gui.Name = "AimAssistGui"
        gui.Parent = LP:WaitForChild("PlayerGui", 10)
        if not gui.Parent then
            error("PlayerGui not found after waiting")
        end
        gui.IgnoreGuiInset = true
        gui.ResetOnSpawn = false

        local silentAimFrame = Instance.new("Frame", gui)
        silentAimFrame.Size = UDim2.new(0, Settings.SilentAimFOV * 2, 0, Settings.SilentAimFOV * 2)
        silentAimFrame.BackgroundTransparency = 1
        silentAimFrame.BorderSizePixel = 2
        silentAimFrame.BorderColor3 = Settings.SilentAimFOVColor
        silentAimFrame.Visible = false
        local silentAimAspect = Instance.new("UIAspectRatioConstraint", silentAimFrame)
        silentAimAspect.AspectRatio = 1

        local triggerBotFrame = Instance.new("Frame", gui)
        triggerBotFrame.Size = UDim2.new(0, Settings.SilentAimFOV * 2, 0, Settings.SilentAimFOV * 2)
        triggerBotFrame.BackgroundTransparency = 1
        triggerBotFrame.BorderSizePixel = 2
        triggerBotFrame.BorderColor3 = Settings.TriggerBotFOVColor
        triggerBotFrame.Visible = false
        local triggerBotAspect = Instance.new("UIAspectRatioConstraint", triggerBotFrame)
        triggerBotAspect.AspectRatio = 1

        local mainFrame = Instance.new("Frame")
        mainFrame.Size = UDim2.new(0, 300, 0, 250)
        mainFrame.Position = UDim2.new(0.5, -150, 0.5, -125)
        mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
        mainFrame.BorderSizePixel = 0
        mainFrame.ClipsDescendants = true
        mainFrame.Parent = gui
        mainFrame.Visible = true

        local mainCorner = Instance.new("UICorner")
        mainCorner.CornerRadius = UDim.new(0, 8)
        mainCorner.Parent = mainFrame

        local mainShadow = Instance.new("ImageLabel")
        mainShadow.Size = UDim2.new(1, 20, 1, 20)
        mainShadow.Position = UDim2.new(0, -10, 0, -10)
        mainShadow.BackgroundTransparency = 1
        mainShadow.Image = "rbxassetid://6014261993"
        mainShadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
        mainShadow.ImageTransparency = 0.7
        mainShadow.ScaleType = Enum.ScaleType.Slice
        mainShadow.SliceCenter = Rect.new(10, 10, 10, 10)
        mainShadow.Parent = mainFrame
        mainShadow.ZIndex = -1

        local titleLabel = Instance.new("TextLabel")
        titleLabel.Size = UDim2.new(1, 0, 0, 20)
        titleLabel.BackgroundTransparency = 1
        titleLabel.Text = "clx"
        titleLabel.TextColor3 = Color3.fromRGB(255, 50, 50)
        titleLabel.TextSize = 14
        titleLabel.Font = Enum.Font.GothamBold
        titleLabel.Parent = mainFrame

        local triggerBotLabel = Instance.new("TextLabel")
        triggerBotLabel.Size = UDim2.new(1, 0, 0, 20)
        triggerBotLabel.Position = UDim2.new(0, 5, 0, 25)
        triggerBotLabel.BackgroundTransparency = 1
        triggerBotLabel.Text = "TriggerBot: OFF"
        triggerBotLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        triggerBotLabel.TextSize = 12
        triggerBotLabel.Font = Enum.Font.Gotham
        triggerBotLabel.TextXAlignment = Enum.TextXAlignment.Left
        triggerBotLabel.Parent = mainFrame

        local triggerBotFOVToggle = Instance.new("TextButton")
        triggerBotFOVToggle.Size = UDim2.new(0, 100, 0, 20)
        triggerBotFOVToggle.Position = UDim2.new(0, 190, 0, 25)
        triggerBotFOVToggle.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        triggerBotFOVToggle.Text = "FOV: OFF"
        triggerBotFOVToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
        triggerBotFOVToggle.TextSize = 12
        triggerBotFOVToggle.Font = Enum.Font.Gotham
        triggerBotFOVToggle.Parent = mainFrame
        triggerBotFOVToggle.ZIndex = 2
        local triggerBotFOVCorner = Instance.new("UICorner")
        triggerBotFOVCorner.CornerRadius = UDim.new(0, 4)
        triggerBotFOVCorner.Parent = triggerBotFOVToggle

        local silentAimLabel = Instance.new("TextLabel")
        silentAimLabel.Size = UDim2.new(1, 0, 0, 20)
        silentAimLabel.Position = UDim2.new(0, 5, 0, 45)
        silentAimLabel.BackgroundTransparency = 1
        silentAimLabel.Text = "Silent Aim: OFF"
        silentAimLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        silentAimLabel.TextSize = 12
        silentAimLabel.Font = Enum.Font.Gotham
        silentAimLabel.TextXAlignment = Enum.TextXAlignment.Left
        silentAimLabel.Parent = mainFrame

        local silentAimFOVToggle = Instance.new("TextButton")
        silentAimFOVToggle.Size = UDim2.new(0, 100, 0, 20)
        silentAimFOVToggle.Position = UDim2.new(0, 190, 0, 45)
        silentAimFOVToggle.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        silentAimFOVToggle.Text = "FOV: OFF"
        silentAimFOVToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
        silentAimFOVToggle.TextSize = 12
        silentAimFOVToggle.Font = Enum.Font.Gotham
        silentAimFOVToggle.Parent = mainFrame
        silentAimFOVToggle.ZIndex = 2
        local silentAimFOVCorner = Instance.new("UICorner")
        silentAimFOVCorner.CornerRadius = UDim.new(0, 4)
        silentAimFOVCorner.Parent = silentAimFOVToggle

        local silentAimFOVLabel = Instance.new("TextLabel")
        silentAimFOVLabel.Size = UDim2.new(1, 0, 0, 20)
        silentAimFOVLabel.Position = UDim2.new(0, 5, 0, 65)
        silentAimFOVLabel.BackgroundTransparency = 1
        silentAimFOVLabel.Text = "Silent Aim FOV: " .. Settings.SilentAimFOV
        silentAimFOVLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        silentAimFOVLabel.TextSize = 12
        silentAimFOVLabel.Font = Enum.Font.Gotham
        silentAimFOVLabel.TextXAlignment = Enum.TextXAlignment.Left
        silentAimFOVLabel.Parent = mainFrame

        local scrollingFrame = Instance.new("ScrollingFrame")
        scrollingFrame.Size = UDim2.new(1, 0, 0, 150)
        scrollingFrame.Position = UDim2.new(0, 0, 0, 90)
        scrollingFrame.BackgroundTransparency = 1
        scrollingFrame.ScrollBarThickness = 4
        scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 200)
        scrollingFrame.Parent = mainFrame

        return gui, mainFrame, silentAimFrame, triggerBotFrame, 
               triggerBotLabel, silentAimLabel, silentAimFOVLabel,
               triggerBotFOVToggle, silentAimFOVToggle, scrollingFrame
    end)

    if not success then
        warn("Échec de la création du GUI : " .. tostring(result))
        return nil
    end

    return result
end

local result = createGui()
if not result then
    warn("Échec de l'initialisation du GUI. Arrêt du script.")
    return
end

gui, mainFrame, silentAimFrame, triggerBotFrame, 
triggerBotLabel, silentAimLabel, silentAimFOVLabel,
triggerBotFOVToggle, silentAimFOVToggle, scrollingFrame = unpack(result)

local function createSlider(labelText, settingKey, min, max, posY)
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(0, 260, 0, 20)
    label.Position = UDim2.new(0, 5, 0, posY)
    label.BackgroundTransparency = 1
    label.Text = labelText .. ": " .. Settings[settingKey]
    label.TextColor3 = Color3.fromRGB(180, 180, 180)
    label.TextSize = 12
    label.Font = Enum.Font.Gotham
    label.Parent = scrollingFrame
    local slider = Instance.new("TextBox")
    slider.Size = UDim2.new(0, 240, 0, 20)
    slider.Position = UDim2.new(0, 5, 0, posY + 20)
    slider.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    slider.Text = tostring(Settings[settingKey])
    slider.TextColor3 = Color3.fromRGB(255, 255, 255)
    slider.TextSize = 12
    slider.Parent = scrollingFrame
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 4)
    corner.Parent = slider
    slider.FocusLost:Connect(function()
        local value = tonumber(slider.Text)
        if value and value >= min and value <= max then
            Settings[settingKey] = value
            label.Text = labelText .. ": " .. value
            silentAimFOVLabel.Text = "Silent Aim FOV: " .. value
            if settingKey == "SilentAimFOV" then
                silentAimFrame.Size = UDim2.new(0, value * 2, 0, value * 2)
                triggerBotFrame.Size = UDim2.new(0, value * 2, 0, value * 2)
            end
        else
            slider.Text = tostring(Settings[settingKey])
        end
    end)
end

local function createKeybind(labelText, settingKey, defaultKey, posY)
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(0, 260, 0, 20)
    label.Position = UDim2.new(0, 5, 0, posY)
    label.BackgroundTransparency = 1
    label.Text = labelText .. ": " .. tostring(defaultKey):match("KeyCode%.(.+)")
    label.TextColor3 = Color3.fromRGB(180, 180, 180)
    label.TextSize = 12
    label.Font = Enum.Font.Gotham
    label.Parent = scrollingFrame
    local input = Instance.new("TextButton")
    input.Size = UDim2.new(0, 240, 0, 20)
    input.Position = UDim2.new(0, 5, 0, posY + 20)
    input.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    input.Text = tostring(defaultKey):match("KeyCode%.(.+)")
    input.TextColor3 = Color3.fromRGB(255, 255, 255)
    input.TextSize = 12
    input.Parent = scrollingFrame
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 4)
    corner.Parent = input
    input.MouseButton1Click:Connect(function()
        input.Text = "Press Key..."
        local connection
        connection = UIS.InputBegan:Connect(function(key)
            if key.KeyCode ~= Enum.KeyCode.Unknown then
                Settings.Keybinds[settingKey] = key.KeyCode
                input.Text = tostring(key.KeyCode):match("KeyCode%.(.+)")
                label.Text = labelText .. ": " .. input.Text
                connection:Disconnect()
            end
        end)
    end)
end

createSlider("Silent FOV", "SilentAimFOV", 1.5, 1000, 5)
createKeybind("Silent Aim Key", "ToggleSilentAim", Settings.Keybinds.ToggleSilentAim, 35)
createKeybind("TriggerBot Key", "ToggleTriggerBot", Settings.Keybinds.ToggleTriggerBot, 65)
createKeybind("Close Menu Key", "CloseMenu", Settings.Keybinds.CloseMenu, 95)

local dragging = false
local dragStart = nil
local startPos = nil

mainFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = mainFrame.Position
    end
end)

mainFrame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement and dragging then
        local delta = input.Position - dragStart
        mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

mainFrame.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
    end
end)

local function toggleMenu()
    mainFrame.Visible = not mainFrame.Visible
end

local function isVisible(target, hitbox)
    if not target or not target.Character or not target.Character:FindFirstChild(hitbox) then return false end
    local rayOrigin = Camera.CFrame.Position
    local rayDirection = (target.Character[hitbox].Position - rayOrigin).Unit * 1000
    local raycastParams = RaycastParams.new()
    raycastParams.FilterDescendantsInstances = {LP.Character}
    raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
    local result = workspace:Raycast(rayOrigin, rayDirection, raycastParams)
    return not result or result.Instance:IsDescendantOf(target.Character)
end

local function getAllPlayersInFOV(fov)
    local targets = {}
    local mousePos = UIS:GetMouseLocation()
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LP and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local hrp = player.Character.HumanoidRootPart
            local viewportPos, onScreen = Camera:WorldToViewportPoint(hrp.Position)
            if onScreen then
                local distance = (Vector2.new(viewportPos.X, viewportPos.Y) - mousePos).Magnitude
                if distance <= fov and isVisible(player, "HumanoidRootPart") then
                    table.insert(targets, player)
                end
            end
        end
    end
    return targets
end

local function getClosestPlayer(fov)
    local radius = fov
    local mousePos = UIS:GetMouseLocation()
    local target = nil
    local closestHitbox = nil
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LP and player.Character then
            for _, hitbox in pairs(Settings.SilentAimHitbox) do
                if player.Character:FindFirstChild(hitbox) then
                    local part = player.Character[hitbox]
                    local viewportPos, onScreen = Camera:WorldToViewportPoint(part.Position)
                    if onScreen then
                        local distance = (Vector2.new(viewportPos.X, viewportPos.Y) - mousePos).Magnitude
                        if distance <= radius and isVisible(player, hitbox) then
                            radius = distance
                            target = player
                            closestHitbox = hitbox
                        end
                    end
                end
            end
        end
    end
    return target, closestHitbox
end

local function resolveVelocity(object)
    local player = Players:GetPlayerFromCharacter(object.Parent)
    if not player then return end
    local currentPosition = object.Position
    local currentTime = tick()
    local prevPos = previousPositions[player] or currentPosition
    local prevTime = previousTimes[player] or currentTime
    if prevPos and prevTime then
        local deltaTime = currentTime - prevTime
        if deltaTime > 0 then
            local velocity = (currentPosition - prevPos) / deltaTime
            if velocity.Magnitude > Settings.ResolverVelocityThreshold then
                object.Velocity = Vector3.new(velocity.X, 0, velocity.Z)
                object.AssemblyLinearVelocity = Vector3.new(velocity.X, 0, velocity.Z)
            end
        end
    end
    previousPositions[player] = currentPosition
    previousTimes[player] = currentTime
end

RS.Heartbeat:Connect(function()
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LP and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            resolveVelocity(player.Character.HumanoidRootPart)
        end
    end
end)

triggerBotFOVToggle.MouseButton1Click:Connect(function()
    States.TriggerBotFOVVisible = not States.TriggerBotFOVVisible
    triggerBotFOVToggle.Text = "FOV: " .. (States.TriggerBotFOVVisible and "ON" or "OFF")
end)

silentAimFOVToggle.MouseButton1Click:Connect(function()
    States.SilentAimFOVVisible = not States.SilentAimFOVVisible
    silentAimFOVToggle.Text = "FOV: " .. (States.SilentAimFOVVisible and "ON" or "OFF")
end)

RS.RenderStepped:Connect(function()
    if isUnlocked then
        local mousePos = UIS:GetMouseLocation()
        silentAimFrame.Position = UDim2.new(0, mousePos.X - Settings.SilentAimFOV, 0, mousePos.Y - Settings.SilentAimFOV)
        silentAimFrame.Visible = States.SilentAim and States.SilentAimFOVVisible
        triggerBotFrame.Position = UDim2.new(0, mousePos.X - Settings.SilentAimFOV, 0, mousePos.Y - Settings.SilentAimFOV)
        triggerBotFrame.Visible = States.TriggerBot and States.TriggerBotFOVVisible
        if States.SilentAim then
            silentTarget, silentHitbox = getClosestPlayer(Settings.SilentAimFOV)
        else
            silentTarget = nil
            silentHitbox = nil
        end
        if States.TriggerBot then
            triggerTargets = getAllPlayersInFOV(Settings.SilentAimFOV)
        else
            triggerTargets = {}
        end
        triggerBotLabel.Text = "TriggerBot: " .. (States.TriggerBot and "ON" or "OFF")
        silentAimLabel.Text = "Silent Aim: " .. (States.SilentAim and "ON" or "OFF")
    end
end)

local function bulletHooker(target, hitbox)
    if not List[game.PlaceId] or not target or not target.Character or not target.Character:FindFirstChild(hitbox) then
        return
    end
    local part = target.Character[hitbox]
    local targetPos = part.Position + (part.Velocity * Vector3.new(Settings.Prediction[1], Settings.Prediction[2], Settings.Prediction[3]))
    
    local remoteName = List[game.PlaceId][3]
    local remote = ReplicatedStorage:FindFirstChild(remoteName)
    if not remote then
        warn("RemoteEvent '" .. remoteName .. "' n'existe pas dans ReplicatedStorage pour PlaceId " .. game.PlaceId)
        return
    end
    
    local success, err = pcall(function()
        remote:FireServer(List[game.PlaceId][2], targetPos)
    end)
    if not success then
        warn("Erreur lors de bulletHooker : " .. tostring(err))
    end
end

local lastTriggerTime = 0
local function triggerBotFire()
    if States.TriggerBot and LP.Character then
        local tool = LP.Character:FindFirstChildOfClass("Tool")
        if tool then
            for _, target in pairs(triggerTargets) do
                for _, hitbox in pairs(Settings.TriggerBotHitbox) do
                    if target.Character and target.Character:FindFirstChild(hitbox) and isVisible(target, hitbox) then
                        local currentTime = tick()
                        local delay = 0.1
                        if currentTime - lastTriggerTime >= delay then
                            tool:Activate()
                            bulletHooker(target, hitbox)
                            lastTriggerTime = currentTime
                            break
                        end
                    end
                end
            end
        end
    end
end

local function connectTool(character)
    if character then
        character.ChildAdded:Connect(function(child)
            if child:IsA("Tool") then
                child.Activated:Connect(function()
                    if States.SilentAim and silentTarget and silentHitbox and isVisible(silentTarget, silentHitbox) then
                        bulletHooker(silentTarget, silentHitbox)
                    end
                end)
            end
        end)
    end
end

LP.CharacterAdded:Connect(function(character)
    connectTool(character)
    if not LP.PlayerGui:FindFirstChild("AimAssistGui") then
        local result = createGui()
        if result then
            gui, mainFrame, silentAimFrame, triggerBotFrame, 
            triggerBotLabel, silentAimLabel, silentAimFOVLabel,
            triggerBotFOVToggle, silentAimFOVToggle, scrollingFrame = unpack(result)
            createSlider("Silent FOV", "SilentAimFOV", 1.5, 1000, 5)
            createKeybind("Silent Aim Key", "ToggleSilentAim", Settings.Keybinds.ToggleSilentAim, 35)
            createKeybind("TriggerBot Key", "ToggleTriggerBot", Settings.Keybinds.ToggleTriggerBot, 65)
            createKeybind("Close Menu Key", "CloseMenu", Settings.Keybinds.CloseMenu, 95)
        else
            warn("Échec de la recréation du GUI après respawn")
        end
    end
end)

if LP.Character then connectTool(LP.Character) end

UIS.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 and States.TriggerBot then
        triggerBotFire()
    elseif input.KeyCode == Settings.Keybinds.CloseMenu then
        toggleMenu()
    elseif input.KeyCode == Settings.Keybinds.ToggleSilentAim then
        States.SilentAim = not States.SilentAim
    elseif input.KeyCode == Settings.Keybinds.ToggleTriggerBot then
        States.TriggerBot = not States.TriggerBot
    end
end)

RS.RenderStepped:Connect(function()
    if States.TriggerBot then
        triggerBotFire()
    end
end)
