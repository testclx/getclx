if not LP then
    game.Players.PlayerAdded:Wait()
    LP = game.Players.LocalPlayer
end

local TS = game:GetService("TweenService")
local UIS = game:GetService("UserInputService")
local RS = game:GetService("RunService")
local Camera = workspace.CurrentCamera
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")

local Settings = {
    SilentAimFOV = 50,
    SilentAimFOVColor = Color3.fromRGB(255, 0, 0),
    Prediction = 0.12,
    TriggerBotFOV = 300,
    TriggerBotFOVColor = Color3.fromRGB(0, 0, 255),
    Keybinds = {
        CloseMenu = Enum.KeyCode.G, -- Changé à G
        ToggleSilentAim = Enum.KeyCode.V,
        ToggleTriggerBot = Enum.KeyCode.C,
        ToggleFOVVisibility = Enum.KeyCode.N
    }
}

local States = {
    SilentAim = false,
    TriggerBot = false,
    FOVVisible = true
}
local silentTarget = nil
local silentHitbox = nil
local triggerTargets = {}
local gui = nil
local silentAimCircle = nil
local triggerBotCircle = nil
local mainFrame = nil
local triggerBotLabel = nil
local silentAimLabel = nil
local fovVisibilityLabel = nil
local silentAimFOVLabel = nil

local List = {
    [2788229376] = {'Da Hood', 'UpdateMousePosI', 'MainEvent'},
    [16469595315] = {'Del Hood Aim', 'UpdateMousePos', 'MainEvent'},
    [17319408836] = {'OG Da Hood', 'UpdateMousePos', 'MainEvent'},
    [14975320521] = {'Ar Hood', 'UpdateMousePos', 'MainEvent'},
    [17200018150] = {'Hood Of AR', 'UpdateMousePos', 'MainEvent'},
    [15644861772] = {'Flame Hood', 'UpdatQeMousePos', 'MainEvent'},
    [17723797487] = {'Dee Hood', 'UpdateMousePosI', 'MainEvent'},
    [17897702920] = {'Og Da Hood', 'UpdateMousePos', 'MainEvent'},
    [17809101348] = {'New Hood', 'UpdateMousePos', 'MainEvent'},
    [17344804827] = {'Yeno Hood', 'UpdateMousePos', 'MainEvent'},
    [16435867341] = {'Mad Hood', 'UpdateMousePos', 'MainEvent'},
    [14412601883] = {'Hood Bank', 'MOUSE', 'MAINEVENT'},
    [84366677940861] = {'Da Uphill', 'MOUSE', 'MAINEVENT'},
    [14487637618] = {'Da Hood Bot Aim Trainer', 'MOUSE', 'MAINEVENT'},
    [11143225577] = {'1v1 Hood Aim Trainer', 'UpdateMousePos', 'MainEvent'},
    [14413712255] = {'Hood Aim', 'MOUSE', 'MAINEVENT'},
    [12927359803] = {'Dah Aim Trainer', 'UpdateMousePos', 'MainEvent'},
    [12867571492] = {'Katana Hood', 'UpdateMousePos', 'MainEvent'},
    [11867820563] = {'Dae Hood', 'UpdateMousePos', 'MainEvent'},
    [17109142105] = {'Da Battles', 'MoonUpdateMousePos', 'MainEvent'},
    [15186202290] = {'Da Strike', 'MOUSE', 'MAINEVENT'},
    [16033173781] = {'Da Hood Macro', 'UpdateMousePosI', 'MainEvent'},
    [7213786345] = {'Da Hood VC', 'UpdateMousePosI', 'MainEvent'},
    [9825515356] = {'Hood Customs', 'MousePosUpdate', 'MainEvent'},
    [17895632819] = {'Hood Spirit', 'UpdateMousePos', 'MainEvent'},
    [5602055394] = {'Hood Modded', 'MousePos', 'Bullets'},
    [7951883376] = {'Hood Modded VC', 'MousePos', 'Bullets'},
    [9183932460] = {'Untitled Hood', 'UpdateMousePos', '.gg/untitledhood'},
    [14412355918] = {'Da Downhill', 'MOUSE', 'MAINEVENT'}
}

local function createGUI()
    print("Début createGUI")
    for _, existingGui in pairs(LP.PlayerGui:GetChildren()) do
        if existingGui.Name == "CLX" then
            existingGui:Destroy()
        end
    end

    gui = Instance.new("ScreenGui")
    gui.Name = "CLX"
    gui.Parent = LP.PlayerGui
    gui.IgnoreGuiInset = true
    gui.ResetOnSpawn = false
    print("ScreenGui CLX créé")

    silentAimCircle = Drawing.new("Circle")
    silentAimCircle.Thickness = 2
    silentAimCircle.NumSides = 100
    silentAimCircle.Radius = Settings.SilentAimFOV
    silentAimCircle.Visible = States.FOVVisible and States.SilentAim
    silentAimCircle.Color = Settings.SilentAimFOVColor
    silentAimCircle.Filled = false

    triggerBotCircle = Drawing.new("Circle")
    triggerBotCircle.Thickness = 2
    triggerBotCircle.NumSides = 100
    triggerBotCircle.Radius = Settings.TriggerBotFOV
    triggerBotCircle.Visible = States.FOVVisible and States.TriggerBot
    triggerBotCircle.Color = Settings.TriggerBotFOVColor
    triggerBotCircle.Filled = false
    print("Cercles Drawing créés")

    mainFrame = Instance.new("Frame")
    mainFrame.Size = UDim2.new(0, 300, 0, 250)
    mainFrame.Position = UDim2.new(0.5, -150, 0.5, -125)
    mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    mainFrame.BorderSizePixel = 0
    mainFrame.ClipsDescendants = true
    mainFrame.Parent = gui
    mainFrame.Visible = true
    print("mainFrame créé")

    local mainCorner = Instance.new("UICorner")
    mainCorner.CornerRadius = UDim.new(0, 8)
    mainCorner.Parent = mainFrame

    local mainShadow = Instance.new("ImageLabel")
    mainShadow.Size = UDim2.new(1, 20, 1, 20)
    mainShadow.Position = UDim2.new(0, -10, 0, -10)
    mainShadow.BackgroundTransparency = 1
    mainShadow.Image = "rbxassetid://6014261993"
    mainShadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
    mainShadow.ImageTransparency = 0.7
    mainShadow.ScaleType = Enum.ScaleType.Slice
    mainShadow.SliceCenter = Rect.new(10, 10, 10, 10)
    mainShadow.Parent = mainFrame
    mainShadow.ZIndex = -1

    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(1, 0, 0, 20)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = "CLX"
    titleLabel.TextColor3 = Color3.fromRGB(255, 20, 147)
    titleLabel.TextSize = 14
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.Parent = mainFrame

    triggerBotLabel = Instance.new("TextLabel")
    triggerBotLabel.Size = UDim2.new(1, 0, 0, 20)
    triggerBotLabel.Position = UDim2.new(0, 5, 0, 25)
    triggerBotLabel.BackgroundTransparency = 1
    triggerBotLabel.Text = "TriggerBot: OFF"
    triggerBotLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    triggerBotLabel.TextSize = 12
    triggerBotLabel.Font = Enum.Font.Gotham
    triggerBotLabel.TextXAlignment = Enum.TextXAlignment.Left
    triggerBotLabel.Parent = mainFrame

    silentAimLabel = Instance.new("TextLabel")
    silentAimLabel.Size = UDim2.new(1, 0, 0, 20)
    silentAimLabel.Position = UDim2.new(0, 5, 0, 45)
    silentAimLabel.BackgroundTransparency = 1
    silentAimLabel.Text = "Silent Aim: OFF"
    silentAimLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    silentAimLabel.TextSize = 12
    silentAimLabel.Font = Enum.Font.Gotham
    silentAimLabel.TextXAlignment = Enum.TextXAlignment.Left
    silentAimLabel.Parent = mainFrame

    fovVisibilityLabel = Instance.new("TextLabel")
    fovVisibilityLabel.Size = UDim2.new(1, 0, 0, 20)
    fovVisibilityLabel.Position = UDim2.new(0, 5, 0, 65)
    fovVisibilityLabel.BackgroundTransparency = 1
    fovVisibilityLabel.Text = "FOV Visible: ON"
    fovVisibilityLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    fovVisibilityLabel.TextSize = 12
    fovVisibilityLabel.Font = Enum.Font.Gotham
    fovVisibilityLabel.TextXAlignment = Enum.TextXAlignment.Left
    fovVisibilityLabel.Parent = mainFrame

    silentAimFOVLabel = Instance.new("TextLabel")
    silentAimFOVLabel.Size = UDim2.new(1, 0, 0, 20)
    silentAimFOVLabel.Position = UDim2.new(0, 5, 0, 85)
    silentAimFOVLabel.BackgroundTransparency = 1
    silentAimFOVLabel.Text = "Silent Aim FOV: " .. Settings.SilentAimFOV
    silentAimFOVLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    silentAimFOVLabel.TextSize = 12
    silentAimFOVLabel.Font = Enum.Font.Gotham
    silentAimFOVLabel.TextXAlignment = Enum.TextXAlignment.Left
    silentAimFOVLabel.Parent = mainFrame
    print("Labels créés")

    local scrollingFrame = Instance.new("ScrollingFrame")
    scrollingFrame.Size = UDim2.new(1, -10, 0, 130)
    scrollingFrame.Position = UDim2.new(0, 5, 0, 105)
    scrollingFrame.BackgroundTransparency = 1
    scrollingFrame.ScrollBarThickness = 3
    scrollingFrame.ScrollBarImageColor3 = Color3.fromRGB(100, 100, 100)
    scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 210)
    scrollingFrame.Parent = mainFrame
    print("ScrollingFrame créé")

    local function createSlider(labelText, settingKey, min, max, posY)
        local label = Instance.new("TextLabel")
        label.Size = UDim2.new(0, 260, 0, 20)
        label.Position = UDim2.new(0, 5, 0, posY)
        label.BackgroundTransparency = 1
        label.Text = labelText .. ": " .. Settings[settingKey]
        label.TextColor3 = Color3.fromRGB(180, 180, 180)
        label.TextSize = 12
        label.Font = Enum.Font.Gotham
        label.Parent = scrollingFrame
        local slider = Instance.new("TextBox")
        slider.Size = UDim2.new(0, 240, 0, 20)
        slider.Position = UDim2.new(0, 5, 0, posY + 20)
        slider.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        slider.Text = tostring(Settings[settingKey])
        slider.TextColor3 = Color3.fromRGB(255, 255, 255)
        slider.TextSize = 12
        slider.Parent = scrollingFrame
        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(0, 4)
        corner.Parent = slider
        slider.FocusLost:Connect(function()
            local value = tonumber(slider.Text)
            if value and value >= min and value <= max then
                Settings[settingKey] = value
                label.Text = labelText .. ": " .. value
                if settingKey == "SilentAimFOV" then
                    silentAimFOVLabel.Text = "Silent Aim FOV: " .. value
                    silentAimCircle.Radius = value
                end
            else
                slider.Text = tostring(Settings[settingKey])
            end
        end)
    end

    local function createKeybind(labelText, settingKey, defaultKey, posY)
        local label = Instance.new("TextLabel")
        label.Size = UDim2.new(0, 260, 0, 20)
        label.Position = UDim2.new(0, 5, 0, posY)
        label.BackgroundTransparency = 1
        label.Text = labelText .. ": " .. tostring(defaultKey):match("KeyCode%.(.+)")
        label.TextColor3 = Color3.fromRGB(180, 180, 180)
        label.TextSize = 12
        label.Font = Enum.Font.Gotham
        label.Parent = scrollingFrame
        local input = Instance.new("TextButton")
        input.Size = UDim2.new(0, 240, 0, 20)
        input.Position = UDim2.new(0, 5, 0, posY + 20)
        input.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        input.Text = tostring(defaultKey):match("KeyCode%.(.+)")
        input.TextColor3 = Color3.fromRGB(255, 255, 255)
        input.TextSize = 12
        input.Parent = scrollingFrame
        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(0, 4)
        corner.Parent = input
        input.MouseButton1Click:Connect(function()
            input.Text = "Press Key..."
            local connection
            connection = UIS.InputBegan:Connect(function(key)
                if key.KeyCode ~= Enum.KeyCode.Unknown then
                    Settings.Keybinds[settingKey] = key.KeyCode
                    input.Text = tostring(key.KeyCode):match("KeyCode%.(.+)")
                    label.Text = labelText .. ": " .. input.Text
                    connection:Disconnect()
                end
            end)
        end)
    end

    createSlider("Silent FOV", "SilentAimFOV", 1, 500, 5)
    createSlider("Prediction", "Prediction", 0, 1, 35)
    createKeybind("Silent Aim Key", "ToggleSilentAim", Settings.Keybinds.ToggleSilentAim, 65)
    createKeybind("TriggerBot Key", "ToggleTriggerBot", Settings.Keybinds.ToggleTriggerBot, 95)
    createKeybind("Close Menu Key", "CloseMenu", Settings.Keybinds.CloseMenu, 125)
    createKeybind("Toggle FOV Visibility", "ToggleFOVVisibility", Settings.Keybinds.ToggleFOVVisibility, 155)
    print("Sliders et keybinds créés")

    local dragging = false
    local dragStart = nil
    local startPos = nil

    mainFrame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = mainFrame.Position
        end
    end)

    mainFrame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement and dragging then
            local delta = input.Position - dragStart
            mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)

    mainFrame.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)

    print("Fin createGUI")
    return gui, silentAimCircle, triggerBotCircle, mainFrame, triggerBotLabel, silentAimLabel, fovVisibilityLabel, silentAimFOVLabel
end

while not LP.PlayerGui do
    wait()
end
print("PlayerGui prêt")

gui, silentAimCircle, triggerBotCircle, mainFrame, triggerBotLabel, silentAimLabel, fovVisibilityLabel, silentAimFOVLabel = createGUI()
print("GUI initialisé")

local function cleanupDrawing()
    if silentAimCircle then
        silentAimCircle:Remove()
        silentAimCircle = nil
    end
    if triggerBotCircle then
        triggerBotCircle:Remove()
        triggerBotCircle = nil
    end
end

LP.CharacterAdded:Connect(function(character)
    print("Respawn, nettoyage GUI")
    cleanupDrawing()
    if gui then
        gui:Destroy()
        gui = nil
        mainFrame = nil
        triggerBotLabel = nil
        silentAimLabel = nil
        fovVisibilityLabel = nil
        silentAimFOVLabel = nil
    end
    connectTool(character)
end)

local function toggleMenu()
    print("toggleMenu appelé")
    if not gui then
        gui, silentAimCircle, triggerBotCircle, mainFrame, triggerBotLabel, silentAimLabel, fovVisibilityLabel, silentAimFOVLabel = createGUI()
        print("Nouveau GUI créé")
    elseif mainFrame then
        mainFrame.Visible = not mainFrame.Visible
        print("Visibilité : " .. tostring(mainFrame.Visible))
    end
end

local function getTargetPosition(part)
    if not part then return nil end
    local targetPos = part.Position + (part.Velocity * Settings.Prediction)
    return targetPos
end

local function getClosestPlayer(fov)
    local target = nil
    local closestPart = nil
    local minDistance = fov
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LP and player.Character and player.Character:FindFirstChild("Humanoid") and player.Character.Humanoid.Health > 0 then
            local parts = {}
            for _, part in pairs(player.Character:GetChildren()) do
                if part:IsA("BasePart") then
                    table.insert(parts, part)
                end
            end
            if #parts > 0 then
                local selectedPart = parts[math.random(1, #parts)]
                local viewportPos, onScreen = Camera:WorldToViewportPoint(selectedPart.Position)
                if onScreen then
                    local distance = (UIS:GetMouseLocation() - Vector2.new(viewportPos.X, viewportPos.Y)).Magnitude
                    if distance < minDistance then
                        minDistance = distance
                        target = player
                        closestPart = selectedPart
                    end
                end
            end
        end
    end
    return target, closestPart
end

local function getAllPlayersInFOV(fov)
    local targets = {}
    local mousePos = UIS:GetMouseLocation()
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LP and player.Character and player.Character:FindFirstChild("Humanoid") and player.Character.Humanoid.Health > 0 then
            for _, part in pairs(player.Character:GetChildren()) do
                if part:IsA("BasePart") then
                    local viewportPos, onScreen = Camera:WorldToViewportPoint(part.Position)
                    if onScreen then
                        local distance = (Vector2.new(viewportPos.X, viewportPos.Y) - mousePos).Magnitude
                        if distance <= fov then
                            table.insert(targets, {Player = player, Part = part})
                        end
                    end
                end
            end
        end
    end
    return targets
end

RS.RenderStepped:Connect(function()
    if silentAimCircle then
        silentAimCircle.Position = UIS:GetMouseLocation()
        silentAimCircle.Visible = States.FOVVisible and States.SilentAim
    end
    if triggerBotCircle then
        triggerBotCircle.Position = UIS:GetMouseLocation()
        triggerBotCircle.Visible = States.FOVVisible and States.TriggerBot
    end
    if States.SilentAim then
        silentTarget, silentHitbox = getClosestPlayer(Settings.SilentAimFOV)
    else
        silentTarget = nil
        silentHitbox = nil
    end
    if States.TriggerBot then
        triggerTargets = getAllPlayersInFOV(Settings.TriggerBotFOV)
    else
        triggerTargets = {}
    end
    if triggerBotLabel then
        triggerBotLabel.Text = "TriggerBot: " .. (States.TriggerBot and "ON" or "OFF")
    end
    if silentAimLabel then
        silentAimLabel.Text = "Silent Aim: " .. (States.SilentAim and "ON" or "OFF")
    end
    if fovVisibilityLabel then
        fovVisibilityLabel.Text = "FOV Visible: " .. (States.FOVVisible and "ON" or "OFF")
    end
end)

local function bulletHooker(target, part)
    if List[game.PlaceId] and target and target.Character and part then
        local targetPos = getTargetPosition(part)
        if not targetPos then
            targetPos = part.Position
        end
        local args = {List[game.PlaceId][2], targetPos}
        ReplicatedStorage:FindFirstChild(List[game.PlaceId][3]):FireServer(unpack(args))
    end
end

local lastTriggerTime = 0
local function triggerBotFire()
    if States.TriggerBot and LP.Character then
        local tool = LP.Character:FindFirstChildOfClass("Tool")
        if tool then
            for _, target in pairs(triggerTargets) do
                local player = target.Player
                local part = target.Part
                if player.Character and part then
                    local currentTime = tick()
                    local delay = 0.05
                    if currentTime - lastTriggerTime >= delay then
                        tool:Activate()
                        bulletHooker(player, part)
                        lastTriggerTime = currentTime
                        break
                    end
                end
            end
        end
    end
end

local function connectTool(character)
    if character then
        character.ChildAdded:Connect(function(child)
            if child:IsA("Tool") then
                child.Activated:Connect(function()
                    if States.SilentAim and silentTarget and silentHitbox then
                        bulletHooker(silentTarget, silentHitbox)
                    end
                end)
            end
        end)
    end
end

LP.CharacterAdded:Connect(connectTool)
if LP.Character then connectTool(LP.Character) end

UIS.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 and States.TriggerBot then
        triggerBotFire()
    elseif input.KeyCode == Settings.Keybinds.CloseMenu then
        toggleMenu()
    elseif input.KeyCode == Settings.Keybinds.ToggleSilentAim then
        States.SilentAim = not States.SilentAim
    elseif input.KeyCode == Settings.Keybinds.ToggleTriggerBot then
        States.TriggerBot = not States.TriggerBot
    elseif input.KeyCode == Settings.Keybinds.ToggleFOVVisibility then
        States.FOVVisible = not States.FOVVisible
    end
end)

RS.RenderStepped:Connect(function()
    if States.TriggerBot then
        triggerBotFire()
    end
end)
