local LP = game.Players.LocalPlayer
if not LP then
    game.Players.PlayerAdded:Wait()
    LP = game.Players.LocalPlayer
end

local TS = game:GetService("TweenService")
local UIS = game:GetService("UserInputService")
local RS = game:GetService("RunService")
local Camera = workspace.CurrentCamera
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")

local Settings = {
    SilentAimFOV = 300,
    SilentAimHitbox = "HumanoidRootPart",
    SilentAimFOVColor = Color3.fromRGB(0, 255, 0),
    Prediction = {0.13544, 0.13544, 0.13544},
    TriggerBotFOV = 300,
    TriggerBotHitbox = "HumanoidRootPart",
    TriggerBotFOVColor = Color3.fromRGB(0, 0, 255),
    TargetAimFOV = 300,
    TargetAimHitbox = "HumanoidRootPart",
    TargetAimFOVColor = Color3.fromRGB(255, 255, 0),
    Keybinds = {
        ToggleMenu = Enum.KeyCode.T,
        ToggleSilentAim = Enum.KeyCode.V,
        ToggleTriggerBot = Enum.KeyCode.C,
        ToggleTargetAim = Enum.KeyCode.X
    }
}

local States = {
    SilentAim = false,
    TriggerBot = false,
    TargetAim = false
}
local isUnlocked = true
local silentTarget = nil
local triggerTarget = nil
local targetAimTarget = nil

local List = {
    [16469595315] = {'Del Hood Aim', 'UpdateMousePos', 'MainEvent'},
    [17319408836] = {'OG Da Hood', 'UpdateMousePos', 'MainEvent'},
    [14975320521] = {'Ar Hood', 'UpdateMousePos', 'MainEvent'},
    [17200018150] = {'Hood Of AR', 'UpdateMousePos', 'MainEvent'},
    [15644861772] = {'Flame Hood', 'UpdatQeMousePos', 'MainEvent'},
    [17723797487] = {'Dee Hood', 'UpdateMousePosI', 'MainEvent'},
    [17897702920] = {'Og Da Hood', 'UpdateMousePos', 'MainEvent'},
    [17809101348] = {'New Hood', 'UpdateMousePos', 'MainEvent'},
    [17344804827] = {'Yeno Hood', 'UpdateMousePos', 'MainEvent'},
    [16435867341] = {'Mad Hood', 'UpdateMousePos', 'MainEvent'},
    [14412601883] = {'Hood Bank', 'MOUSE', 'MAINEVENT'},
    [14412436145] = {'Da Uphill', 'MOUSE', 'MAINEVENT'},
    [14487637618] = {'Da Hood Bot Aim Trainer', 'MOUSE', 'MAINEVENT'},
    [11143225577] = {'1v1 Hood Aim Trainer', 'UpdateMousePos', 'MainEvent'},
    [14413712255] = {'Hood Aim', 'MOUSE', 'MAINEVENT'},
    [12927359803] = {'Dah Aim Trainer', 'UpdateMousePos', 'MainEvent'},
    [12867571492] = {'Katana Hood', 'UpdateMousePos', 'MainEvent'},
    [11867820563] = {'Dae Hood', 'UpdateMousePos', 'MainEvent'},
    [17109142105] = {'Da Battles', 'MoonUpdateMousePos', 'MainEvent'},
    [15186202290] = {'Da Strike', 'MOUSE', 'MAINEVENT'},
    [2788229376] = {'Da Hood', 'UpdateMousePosI', 'MainEvent'},
    [16033173781] = {'Da Hood Macro', 'UpdateMousePosI', 'MainEvent'},
    [7213786345] = {'Da Hood VC', 'UpdateMousePosI', 'MainEvent'},
    [9825515356] = {'Hood Customs', 'MousePosUpdate', 'MainEvent'},
    [17895632819] = {'Hood Spirit', 'UpdateMousePos', 'MainEvent'},
    [5602055394] = {'Hood Modded', 'MousePos', 'Bullets'},
    [7951883376] = {'Hood Modded VC', 'MousePos', 'Bullets'},
    [9183932460] = {'Untitled Hood', 'UpdateMousePos', '.gg/untitledhood'},
    [14412355918] = {'Da Downhill', 'MOUSE', 'MAINEVENT'}
}

local gui = Instance.new("ScreenGui")
gui.Name = "AimAssistGui"
gui.Parent = LP:WaitForChild("PlayerGui")
gui.IgnoreGuiInset = true

local silentAimCircle = Drawing.new("Circle")
silentAimCircle.Thickness = 1.5
silentAimCircle.NumSides = 100
silentAimCircle.Radius = Settings.SilentAimFOV
silentAimCircle.Visible = false
silentAimCircle.Color = Settings.SilentAimFOVColor
silentAimCircle.Filled = false

local triggerBotCircle = Drawing.new("Circle")
triggerBotCircle.Thickness = 1.5
triggerBotCircle.NumSides = 100
triggerBotCircle.Radius = Settings.SilentAimFOV
triggerBotCircle.Visible = false
triggerBotCircle.Color = Settings.TriggerBotFOVColor
triggerBotCircle.Filled = false

local targetAimCircle = Drawing.new("Circle")
targetAimCircle.Thickness = 1.5
targetAimCircle.NumSides = 100
targetAimCircle.Radius = Settings.TargetAimFOV
targetAimCircle.Visible = false
targetAimCircle.Color = Settings.TargetAimFOVColor
targetAimCircle.Filled = false

local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 200, 0, 300)
mainFrame.Position = UDim2.new(0.5, -100, 0.5, -150)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
mainFrame.BorderSizePixel = 0
mainFrame.ClipsDescendants = true
mainFrame.Parent = gui
mainFrame.Visible = false

local mainCorner = Instance.new("UICorner")
mainCorner.CornerRadius = UDim.new(0, 8)
mainCorner.Parent = mainFrame

local mainShadow = Instance.new("ImageLabel")
mainShadow.Size = UDim2.new(1, 20, 1, 20)
mainShadow.Position = UDim2.new(0, -10, 0, -10)
mainShadow.BackgroundTransparency = 1
mainShadow.Image = "rbxassetid://6014261993"
mainShadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
mainShadow.ImageTransparency = 0.7
mainShadow.ScaleType = Enum.ScaleType.Slice
mainShadow.SliceCenter = Rect.new(10, 10, 10, 10)
mainShadow.Parent = mainFrame
mainShadow.ZIndex = -1

local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(1, 0, 0, 30)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "CLX - Aim Assist"
titleLabel.TextColor3 = Color3.fromRGB(255, 50, 50)
titleLabel.TextSize = 18
titleLabel.Font = Enum.Font.GothamBold
titleLabel.Parent = mainFrame

local scrollingFrame = Instance.new("ScrollingFrame")
scrollingFrame.Size = UDim2.new(1, -10, 1, -40)
scrollingFrame.Position = UDim2.new(0, 5, 0, 35)
scrollingFrame.BackgroundTransparency = 1
scrollingFrame.ScrollBarThickness = 3
scrollingFrame.ScrollBarImageColor3 = Color3.fromRGB(100, 100, 100)
scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 400)
scrollingFrame.Parent = mainFrame

local function createToggleButton(name, stateKey, posY, textOn, textOff)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(0, 160, 0, 30)
    button.Position = UDim2.new(0, 10, 0, posY)
    button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    button.Text = name .. ": " .. (States[stateKey] and textOn or textOff)
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.TextSize = 12
    button.Font = Enum.Font.Gotham
    button.Parent = scrollingFrame
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 6)
    corner.Parent = button
    button.MouseButton1Click:Connect(function()
        States[stateKey] = not States[stateKey]
        button.Text = name .. ": " .. (States[stateKey] and textOn or textOff)
        button.BackgroundColor3 = States[stateKey] and Color3.fromRGB(70, 100, 70) or Color3.fromRGB(50, 50, 50)
    end)
    return button
end

local function createSlider(labelText, settingKey, min, max, posY)
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(0, 160, 0, 20)
    label.Position = UDim2.new(0, 10, 0, posY)
    label.BackgroundTransparency = 1
    label.Text = labelText .. ": " .. Settings[settingKey]
    label.TextColor3 = Color3.fromRGB(180, 180, 180)
    label.TextSize = 12
    label.Font = Enum.Font.Gotham
    label.Parent = scrollingFrame
    local slider = Instance.new("TextBox")
    slider.Size = UDim2.new(0, 100, 0, 20)
    slider.Position = UDim2.new(0, 70, 0, posY + 20)
    slider.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    slider.Text = tostring(Settings[settingKey])
    slider.TextColor3 = Color3.fromRGB(255, 255, 255)
    slider.TextSize = 12
    slider.Parent = scrollingFrame
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 4)
    corner.Parent = slider
    slider.FocusLost:Connect(function()
        local value = tonumber(slider.Text)
        if value and value >= min and value <= max then
            Settings[settingKey] = value
            label.Text = labelText .. ": " .. value
            if settingKey == "SilentAimFOV" then
                silentAimCircle.Radius = value
                triggerBotCircle.Radius = value
            elseif settingKey == "TriggerBotFOV" then
                triggerBotCircle.Radius = value
            elseif settingKey == "TargetAimFOV" then
                targetAimCircle.Radius = value
            end
        else
            slider.Text = tostring(Settings[settingKey])
        end
    end)
end

local function createColorPicker(labelText, settingKey, defaultColor, posY)
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(0, 160, 0, 20)
    label.Position = UDim2.new(0, 10, 0, posY)
    label.BackgroundTransparency = 1
    label.Text = labelText
    label.TextColor3 = Color3.fromRGB(180, 180, 180)
    label.TextSize = 12
    label.Font = Enum.Font.Gotham
    label.Parent = scrollingFrame
    local input = Instance.new("TextBox")
    input.Size = UDim2.new(0, 100, 0, 20)
    input.Position = UDim2.new(0, 70, 0, posY + 20)
    input.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    input.Text = string.format("%d,%d,%d", defaultColor.R * 255, defaultColor.G * 255, defaultColor.B * 255)
    input.TextColor3 = Color3.fromRGB(255, 255, 255)
    input.TextSize = 12
    input.Parent = scrollingFrame
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 4)
    corner.Parent = input
    input.FocusLost:Connect(function()
        local r, g, b = input.Text:match("(%d+),(%d+),(%d+)")
        r, g, b = tonumber(r), tonumber(g), tonumber(b)
        if r and g and b and r >= 0 and r <= 255 and g >= 0 and g <= 255 and b >= 0 and b <= 255 then
            Settings[settingKey] = Color3.fromRGB(r, g, b)
            if settingKey == "SilentAimFOVColor" then
                silentAimCircle.Color = Settings[settingKey]
            elseif settingKey == "TriggerBotFOVColor" then
                triggerBotCircle.Color = Settings[settingKey]
            elseif settingKey == "TargetAimFOVColor" then
                targetAimCircle.Color = Settings[settingKey]
            end
        else
            input.Text = string.format("%d,%d,%d", defaultColor.R * 255, defaultColor.G * 255, defaultColor.B * 255)
        end
    end)
end

local silentAimButton = createToggleButton("Silent Aim", "SilentAim", 10, "ON", "OFF")
createSlider("Silent FOV", "SilentAimFOV", 50, 1000, 50)
createColorPicker("Silent Color (R,G,B)", "SilentAimFOVColor", Settings.SilentAimFOVColor, 100)
local triggerBotButton = createToggleButton("TriggerBot", "TriggerBot", 170, "ON", "OFF")
createSlider("TriggerBot FOV", "TriggerBotFOV", 50, 1000, 210)
createColorPicker("TriggerBot Color (R,G,B)", "TriggerBotFOVColor", Settings.TriggerBotFOVColor, 260)
local targetAimButton = createToggleButton("Target Aim", "TargetAim", 330, "ON", "OFF")
createSlider("Target Aim FOV", "TargetAimFOV", 50, 1000, 370)
createColorPicker("Target Aim Color (R,G,B)", "TargetAimFOVColor", Settings.TargetAimFOVColor, 420)

local function toggleMenu()
    mainFrame.Visible = not mainFrame.Visible
    if mainFrame.Visible then
        mainFrame:TweenSizeAndPosition(
            UDim2.new(0, 200, 0, 300), UDim2.new(0.5, -100, 0.5, -150),
            "Out", "Quad", 0.3, true
        )
    else
        mainFrame:TweenSizeAndPosition(
            UDim2.new(0, 200, 0, 0), UDim2.new(0.5, -100, 0.5, -150),
            "In", "Quad", 0.3, true
        )
    end
end

local function getClosestPlayer(fov)
    local radius = fov
    local mousePos = UIS:GetMouseLocation()
    local target = nil
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LP and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local viewportPos = Camera:WorldToViewportPoint(player.Character.HumanoidRootPart.Position)
            local distance = (Vector2.new(viewportPos.X, viewportPos.Y) - mousePos).Magnitude
            if distance < radius then
                radius = distance
                target = player
            end
        end
    end
    return target
end

local function isVisible(target, hitbox)
    if not target or not target.Character or not target.Character:FindFirstChild(hitbox) then return false end
    local rayOrigin = Camera.CFrame.Position
    local rayDirection = (target.Character[hitbox].Position - rayOrigin).Unit * 1000
    local raycastParams = RaycastParams.new()
    raycastParams.FilterDescendantsInstances = {LP.Character}
    raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
    local result = workspace:Raycast(rayOrigin, rayDirection, raycastParams)
    return not result or result.Instance:IsDescendantOf(target.Character)
end

RS.RenderStepped:Connect(function()
    if isUnlocked then
        silentAimCircle.Position = UIS:GetMouseLocation()
        silentAimCircle.Visible = States.SilentAim
        triggerBotCircle.Position = UIS:GetMouseLocation()
        triggerBotCircle.Visible = States.TriggerBot
        targetAimCircle.Position = UIS:GetMouseLocation()
        targetAimCircle.Visible = States.TargetAim
        if States.SilentAim then
            silentTarget = getClosestPlayer(Settings.SilentAimFOV)
        else
            silentTarget = nil
        end
        if States.TriggerBot then
            triggerTarget = silentTarget or getClosestPlayer(Settings.TriggerBotFOV)
        else
            triggerTarget = nil
        end
        if States.TargetAim then
            targetAimTarget = getClosestPlayer(Settings.TargetAimFOV)
        else
            targetAimTarget = nil
        end
    end
end)

local function bulletHooker(target)
    if List[game.PlaceId] and target and target.Character and target.Character:FindFirstChild(Settings.SilentAimHitbox) then
        local hitbox = target.Character[Settings.SilentAimHitbox]
        local targetPos = hitbox.Position + Vector3.new(
            hitbox.Velocity.X * Settings.Prediction[1],
            hitbox.Velocity.Y * Settings.Prediction[2],
            hitbox.Velocity.Z * Settings.Prediction[3]
        )
        ReplicatedStorage[List[game.PlaceId][3]]:FireServer(List[game.PlaceId][2], targetPos)
    end
end

local HoldClick = true
local Hotkey = 'c'
local HotkeyToggle = true
local Toggle = false
local CurrentlyPressed = false
local Mouse = LP:GetMouse()

local function triggerBotFire()
    if States.TriggerBot and triggerTarget and triggerTarget.Character and triggerTarget.Character:FindFirstChild(Settings.TriggerBotHitbox) and LP.Character then
        local tool = LP.Character:FindFirstChildOfClass("Tool")
        if tool and isVisible(triggerTarget, Settings.TriggerBotHitbox) then
            if HoldClick then
                if not CurrentlyPressed then
                    CurrentlyPressed = true
                    tool:Activate()
                    bulletHooker(triggerTarget)
                end
            else
                tool:Activate()
                bulletHooker(triggerTarget)
            end
        else
            if HoldClick then
                CurrentlyPressed = false
            end
        end
    end
end

Mouse.KeyDown:Connect(function(key)
    if HotkeyToggle and key == Hotkey then
        Toggle = not Toggle
        States.TriggerBot = Toggle
        triggerBotButton.Text = "TriggerBot: " .. (States.TriggerBot and "ON" or "OFF")
        triggerBotButton.BackgroundColor3 = States.TriggerBot and Color3.fromRGB(70, 100, 70) or Color3.fromRGB(50, 50, 50)
    elseif key == Hotkey then
        Toggle = true
        States.TriggerBot = Toggle
        triggerBotButton.Text = "TriggerBot: " .. (States.TriggerBot and "ON" or "OFF")
        triggerBotButton.BackgroundColor3 = States.TriggerBot and Color3.fromRGB(70, 100, 70) or Color3.fromRGB(50, 50, 50)
    end
end)

Mouse.KeyUp:Connect(function(key)
    if not HotkeyToggle and key == Hotkey then
        Toggle = false
        States.TriggerBot = Toggle
        triggerBotButton.Text = "TriggerBot: " .. (States.TriggerBot and "ON" or "OFF")
        triggerBotButton.BackgroundColor3 = States.TriggerBot and Color3.fromRGB(70, 100, 70) or Color3.fromRGB(50, 50, 50)
    end
end)

RS.RenderStepped:Connect(function()
    if States.TriggerBot then
        triggerBotFire()
    end
end)

local function connectTool(character)
    if character then
        character.ChildAdded:Connect(function(child)
            if child:IsA("Tool") then
                child.Activated:Connect(function()
                    bulletHooker(silentTarget)
                    bulletHooker(targetAimTarget)
                end)
            end
        end)
    end
end

LP.CharacterAdded:Connect(connectTool)
if LP.Character then connectTool(LP.Character) end

UIS.InputBegan:Connect(function(input)
    if input.KeyCode == Settings.Keybinds.ToggleMenu then
        toggleMenu()
    elseif input.KeyCode == Settings.Keybinds.ToggleSilentAim then
        States.SilentAim = not States.SilentAim
        silentAimButton.Text = "Silent Aim: " .. (States.SilentAim and "ON" or "OFF")
        silentAimButton.BackgroundColor3 = States.SilentAim and Color3.fromRGB(70, 100, 70) or Color3.fromRGB(50, 50, 50)
    elseif input.KeyCode == Settings.Keybinds.ToggleTargetAim then
        States.TargetAim = not States.TargetAim
        targetAimButton.Text = "Target Aim: " .. (States.TargetAim and "ON" or "OFF")
        targetAimButton.BackgroundColor3 = States.TargetAim and Color3.fromRGB(70, 100, 70) or Color3.fromRGB(50, 50, 50)
    end
end)
