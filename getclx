-- Assure que LocalPlayer est chargé
local LP = game.Players.LocalPlayer
if not LP then
    game.Players.PlayerAdded:Wait()
    LP = game.Players.LocalPlayer
end

-- Définir les services
local TS = game:GetService("TweenService")
local UIS = game:GetService("UserInputService")
local RS = game:GetService("RunService")
local Camera = workspace.CurrentCamera
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")

-- Paramètres personnalisables
local Settings = {
    -- Paramètres de l'aim assist
    AimAssistFOV = 300,
    AimAssistSmoothness = 0.2,
    AimAssistMaxDistance = 1000,
    AimAssistHitbox = "Head",
    AimAssistFOVColor = Color3.fromRGB(255, 0, 0),

    -- Paramètres du silent aim
    SilentAimFOV = 300,
    SilentAimHitbox = "HumanoidRootPart",
    SilentAimFOVColor = Color3.fromRGB(0, 255, 0),
    Prediction = {0.13544, 0.13544, 0.13544},

    -- Paramètres du triggerbot
    TriggerBotFOV = 300,
    TriggerBotHitbox = "HumanoidRootPart",
    TriggerBotFOVColor = Color3.fromRGB(0, 0, 255),
    TriggerBotDelay = 0.1,

    -- Paramètres généraux (keybinds par défaut)
    Keybinds = {
        ToggleMenu = Enum.KeyCode.T,
        ToggleAimAssist = Enum.KeyCode.C,
        ToggleSilentAim = Enum.KeyCode.V,
        ToggleTriggerBot = Enum.KeyCode.B,
        ToggleTargetAim = Enum.KeyCode.X -- Nouvelle touche pour Target Aim
    }
}

-- Variables d'état
local States = {
    AimAssist = false,
    SilentAim = false,
    TriggerBot = false,
    TargetAim = false
}
local isUnlocked = true
local isTargeting = false
local lockedTarget = nil
local silentTarget = nil
local triggerTarget = nil
local targetAimTarget = nil -- Nouvelle variable pour Target Aim

-- Liste des jeux compatibles
local List = {
    [16469595315] = {'Del Hood Aim', 'UpdateMousePos', 'MainEvent'},
    [17319408836] = {'OG Da Hood', 'UpdateMousePos', 'MainEvent'},
    [14975320521] = {'Ar Hood', 'UpdateMousePos', 'MainEvent'},
    [17200018150] = {'Hood Of AR', 'UpdateMousePos', 'MainEvent'},
    [15644861772] = {'Flame Hood', 'UpdatQeMousePos', 'MainEvent'},
    [17723797487] = {'Dee Hood', 'UpdateMousePosI', 'MainEvent'},
    [17897702920] = {'Og Da Hood', 'UpdateMousePos', 'MainEvent'},
    [17809101348] = {'New Hood', 'UpdateMousePos', 'MainEvent'},
    [17344804827] = {'Yeno Hood', 'UpdateMousePos', 'MainEvent'},
    [16435867341] = {'Mad Hood', 'UpdateMousePos', 'MainEvent'},
    [14412601883] = {'Hood Bank', 'MOUSE', 'MAINEVENT'},
    [14412436145] = {'Da Uphill', 'MOUSE', 'MAINEVENT'},
    [14487637618] = {'Da Hood Bot Aim Trainer', 'MOUSE', 'MAINEVENT'},
    [11143225577] = {'1v1 Hood Aim Trainer', 'UpdateMousePos', 'MainEvent'},
    [14413712255] = {'Hood Aim', 'MOUSE', 'MAINEVENT'},
    [12927359803] = {'Dah Aim Trainer', 'UpdateMousePos', 'MainEvent'},
    [12867571492] = {'Katana Hood', 'UpdateMousePos', 'MainEvent'},
    [11867820563] = {'Dae Hood', 'UpdateMousePos', 'MainEvent'},
    [17109142105] = {'Da Battles', 'MoonUpdateMousePos', 'MainEvent'},
    [15186202290] = {'Da Strike', 'MOUSE', 'MAINEVENT'},
    [2788229376] = {'Da Hood', 'UpdateMousePosI', 'MainEvent'},
    [16033173781] = {'Da Hood Macro', 'UpdateMousePosI', 'MainEvent'},
    [7213786345] = {'Da Hood VC', 'UpdateMousePosI', 'MainEvent'},
    [9825515356] = {'Hood Customs', 'MousePosUpdate', 'MainEvent'},
    [17895632819] = {'Hood Spirit', 'UpdateMousePos', 'MainEvent'},
    [5602055394] = {'Hood Modded', 'MousePos', 'Bullets'},
    [7951883376] = {'Hood Modded VC', 'MousePos', 'Bullets'},
    [9183932460] = {'Untitled Hood', 'UpdateMousePos', '.gg/untitledhood'},
    [14412355918] = {'Da Downhill', 'MOUSE', 'MAINEVENT'}
}

-- Créer un ScreenGui pour l'interface
local gui = Instance.new("ScreenGui")
gui.Name = "AimAssistGui"
gui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

-- Cercles de dessin (FOV)
local aimAssistCircle = Drawing.new("Circle")
aimAssistCircle.Thickness = 1
aimAssistCircle.NumSides = 100
aimAssistCircle.Radius = Settings.AimAssistFOV
aimAssistCircle.Visible = false
aimAssistCircle.Color = Settings.AimAssistFOVColor
aimAssistCircle.Filled = false

local silentAimCircle = Drawing.new("Circle")
silentAimCircle.Thickness = 1
silentAimCircle.NumSides = 100
silentAimCircle.Radius = Settings.SilentAimFOV
silentAimCircle.Visible = false
silentAimCircle.Color = Settings.SilentAimFOVColor
silentAimCircle.Filled = false

local triggerBotCircle = Drawing.new("Circle")
triggerBotCircle.Thickness = 1
triggerBotCircle.NumSides = 100
triggerBotCircle.Radius = Settings.TriggerBotFOV
triggerBotCircle.Visible = false
triggerBotCircle.Color = Settings.TriggerBotFOVColor
triggerBotCircle.Filled = false

local targetAimCircle = Drawing.new("Circle") -- Nouveau cercle pour Target Aim
targetAimCircle.Thickness = 1
targetAimCircle.NumSides = 100
targetAimCircle.Radius = Settings.AimAssistFOV -- Réutilise le FOV de l'Aim Assist pour simplicité
targetAimCircle.Visible = false
targetAimCircle.Color = Color3.fromRGB(255, 255, 0) -- Couleur jaune pour Target Aim
targetAimCircle.Filled = false

-- Interface principale
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 400, 0, 600) -- Ajusté pour inclure les keybinds personnalisables
mainFrame.Position = UDim2.new(0.5, -200, 0.5, -300)
mainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
mainFrame.BorderSizePixel = 0
mainFrame.ClipsDescendants = true
mainFrame.Parent = gui
mainFrame.Visible = false

local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(0, 300, 0, 40)
titleLabel.Position = UDim2.new(0, 50, 0, 10)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "Grok's Aimbot Menu"
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.TextSize = 20
titleLabel.Font = Enum.Font.SourceSansBold
titleLabel.Parent = mainFrame

local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0, 50, 0, 50)
toggleButton.Position = UDim2.new(0, 10, 0, 10)
toggleButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
toggleButton.Text = "Menu"
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.Parent = gui

-- Boutons pour activer/désactiver les fonctionnalités
local aimAssistButton = Instance.new("TextButton")
aimAssistButton.Size = UDim2.new(0, 300, 0, 50)
aimAssistButton.Position = UDim2.new(0, 50, 0, 60)
aimAssistButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
aimAssistButton.Text = "Aim Assist: OFF"
aimAssistButton.TextColor3 = Color3.fromRGB(255, 255, 255)
aimAssistButton.Parent = mainFrame

local silentAimButton = Instance.new("TextButton")
silentAimButton.Size = UDim2.new(0, 300, 0, 50)
silentAimButton.Position = UDim2.new(0, 50, 0, 120)
silentAimButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
silentAimButton.Text = "Silent Aim: OFF"
silentAimButton.TextColor3 = Color3.fromRGB(255, 255, 255)
silentAimButton.Parent = mainFrame

local triggerBotButton = Instance.new("TextButton")
triggerBotButton.Size = UDim2.new(0, 300, 0, 50)
triggerBotButton.Position = UDim2.new(0, 50, 0, 180)
triggerBotButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
triggerBotButton.Text = "TriggerBot: OFF"
triggerBotButton.TextColor3 = Color3.fromRGB(255, 255, 255)
triggerBotButton.Parent = mainFrame

local targetAimButton = Instance.new("TextButton") -- Nouveau bouton pour Target Aim
targetAimButton.Size = UDim2.new(0, 300, 0, 50)
targetAimButton.Position = UDim2.new(0, 50, 0, 240)
targetAimButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
targetAimButton.Text = "Target Aim: OFF"
targetAimButton.TextColor3 = Color3.fromRGB(255, 255, 255)
targetAimButton.Parent = mainFrame

-- Champs pour personnaliser les keybinds
local keybindLabels = {
    {Text = "Toggle Menu: ", Key = Settings.Keybinds.ToggleMenu, Pos = UDim2.new(0, 50, 0, 300)},
    {Text = "Aim Assist: ", Key = Settings.Keybinds.ToggleAimAssist, Pos = UDim2.new(0, 50, 0, 330)},
    {Text = "Silent Aim: ", Key = Settings.Keybinds.ToggleSilentAim, Pos = UDim2.new(0, 50, 0, 360)},
    {Text = "TriggerBot: ", Key = Settings.Keybinds.ToggleTriggerBot, Pos = UDim2.new(0, 50, 0, 390)},
    {Text = "Target Aim: ", Key = Settings.Keybinds.ToggleTargetAim, Pos = UDim2.new(0, 50, 0, 420)}
}

local keybindFields = {}
for i, label in pairs(keybindLabels) do
    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(0, 150, 0, 20)
    textLabel.Position = label.Pos
    textLabel.BackgroundTransparency = 1
    textLabel.Text = label.Text .. tostring(label.Key):match("KeyCode%.(.+)")
    textLabel.TextColor3 = Color3.fromRGB(150, 150, 150)
    textLabel.TextSize = 14
    textLabel.Parent = mainFrame

    local inputField = Instance.new("TextButton")
    inputField.Size = UDim2.new(0, 100, 0, 20)
    inputField.Position = label.Pos + UDim2.new(0, 160, 0, 0)
    inputField.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    inputField.Text = tostring(label.Key):match("KeyCode%.(.+)")
    inputField.TextColor3 = Color3.fromRGB(255, 255, 255)
    inputField.Parent = mainFrame
    table.insert(keybindFields, {Field = inputField, Label = textLabel, Key = label.Key, Index = i})

    inputField.MouseButton1Click:Connect(function()
        inputField.Text = "Press Key..."
        local connection
        connection = UIS.InputBegan:Connect(function(input)
            if input.KeyCode ~= Enum.KeyCode.Unknown then
                inputField.Text = tostring(input.KeyCode):match("KeyCode%.(.+)")
                if i == 1 then Settings.Keybinds.ToggleMenu = input.KeyCode
                elseif i == 2 then Settings.Keybinds.ToggleAimAssist = input.KeyCode
                elseif i == 3 then Settings.Keybinds.ToggleSilentAim = input.KeyCode
                elseif i == 4 then Settings.Keybinds.ToggleTriggerBot = input.KeyCode
                elseif i == 5 then Settings.Keybinds.ToggleTargetAim = input.KeyCode end
                textLabel.Text = label.Text .. inputField.Text
                connection:Disconnect()
            end
        end)
    end)
end

-- Fonction pour trouver la cible la plus proche
local function getClosestPlayer(fov)
    local radius = fov
    local mousePos = UIS:GetMouseLocation()
    local target = nil

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LP and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local viewportPos = Camera:WorldToViewportPoint(player.Character.HumanoidRootPart.Position)
            local distance = (Vector2.new(viewportPos.X, viewportPos.Y) - mousePos).Magnitude

            if distance < radius then
                radius = distance
                target = player
            end
        end
    end
    return target
end

-- Vérification de visibilité
local function isVisible(target, hitbox)
    if not target or not target.Character or not target.Character:FindFirstChild(hitbox) then return false end
    local rayOrigin = Camera.CFrame.Position
    local rayDirection = (target.Character[hitbox].Position - rayOrigin).Unit * Settings.AimAssistMaxDistance
    local raycastParams = RaycastParams.new()
    raycastParams.FilterDescendantsInstances = {LP.Character}
    raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
    local result = workspace:Raycast(rayOrigin, rayDirection, raycastParams)
    return not result or result.Instance:IsDescendantOf(target.Character)
end

-- Logique principale
RS.RenderStepped:Connect(function()
    if isUnlocked then
        -- Mettre à jour les cercles FOV
        aimAssistCircle.Position = UIS:GetMouseLocation()
        aimAssistCircle.Visible = States.AimAssist
        silentAimCircle.Position = UIS:GetMouseLocation()
        silentAimCircle.Visible = States.SilentAim
        triggerBotCircle.Position = UIS:GetMouseLocation()
        triggerBotCircle.Visible = States.TriggerBot
        targetAimCircle.Position = UIS:GetMouseLocation() -- Mettre à jour le cercle du Target Aim
        targetAimCircle.Visible = States.TargetAim

        -- Aim Assist
        if States.AimAssist and isTargeting and lockedTarget and lockedTarget.Character and lockedTarget.Character:FindFirstChild(Settings.AimAssistHitbox) then
            local hitbox = lockedTarget.Character[Settings.AimAssistHitbox]
            local predictedPos = hitbox.Position + hitbox.Parent.HumanoidRootPart.Velocity * Settings.Prediction[1]
            local screenPos, onScreen = Camera:WorldToViewportPoint(predictedPos)

            if onScreen and isVisible(lockedTarget, Settings.AimAssistHitbox) then
                local mousePos = UIS:GetMouseLocation()
                local targetPos = Vector2.new(screenPos.X, screenPos.Y)
                local distance = (targetPos - mousePos).Magnitude

                if distance <= Settings.AimAssistFOV then
                    local currentCFrame = Camera.CFrame
                    local newCFrame = CFrame.new(currentCFrame.Position, predictedPos)
                    Camera.CFrame = currentCFrame:Lerp(newCFrame, Settings.AimAssistSmoothness)
                else
                    lockedTarget = nil
                    isTargeting = false
                end
            else
                lockedTarget = nil
                isTargeting = false
            end
        end

        -- Silent Aim
        if States.SilentAim then
            silentTarget = getClosestPlayer(Settings.SilentAimFOV)
        else
            silentTarget = nil
        end

        -- TriggerBot
        if States.TriggerBot then
            triggerTarget = getClosestPlayer(Settings.TriggerBotFOV)
        else
            triggerTarget = nil
        end

        -- Target Aim (basé sur ton script original)
        if States.TargetAim then
            targetAimTarget = getClosestPlayer(Settings.AimAssistFOV)
        else
            targetAimTarget = nil
        end
    end
end)

-- Fonction pour le Target Aim (bulletHooker)
local function bulletHooker(target)
    if List[game.PlaceId] and target and target.Character and target.Character:FindFirstChild(Settings.SilentAimHitbox) then
        local hitbox = target.Character[Settings.SilentAimHitbox]
        local targetPos = hitbox.Position + Vector3.new(
            hitbox.Velocity.X * Settings.Prediction[1],
            hitbox.Velocity.Y * Settings.Prediction[2],
            hitbox.Velocity.Z * Settings.Prediction[3]
        )
        ReplicatedStorage[List[game.PlaceId][3]]:FireServer(List[game.PlaceId][2], targetPos)
    end
end

-- Fonction pour le TriggerBot
local lastTriggerTime = 0
local function triggerBotFire()
    if States.TriggerBot and triggerTarget and triggerTarget.Character and triggerTarget.Character:FindFirstChild(Settings.TriggerBotHitbox) then
        local currentTime = tick()
        if currentTime - lastTriggerTime >= Settings.TriggerBotDelay then
            local tool = LP.Character and LP.Character:FindFirstChildOfClass("Tool")
            if tool and isVisible(triggerTarget, Settings.TriggerBotHitbox) then
                tool:Activate()
                lastTriggerTime = currentTime
            end
        end
    end
end

-- Connecter les outils
local function connectTool(character)
    if character then
        character.ChildAdded:Connect(function(child)
            if child:IsA("Tool") then
                child.Activated:Connect(function()
                    bulletHooker(silentTarget) -- Silent Aim
                    bulletHooker(targetAimTarget) -- Target Aim
                    triggerBotFire() -- TriggerBot
                end)
            end
        end)
    end
end

LP.CharacterAdded:Connect(connectTool)
if LP.Character then connectTool(LP.Character) end

-- Contrôles via l'interface
toggleButton.MouseButton1Click:Connect(function()
    mainFrame.Visible = not mainFrame.Visible
end)

aimAssistButton.MouseButton1Click:Connect(function()
    States.AimAssist = not States.AimAssist
    aimAssistButton.Text = "Aim Assist: " .. (States.AimAssist and "ON" or "OFF")
end)

silentAimButton.MouseButton1Click:Connect(function()
    States.SilentAim = not States.SilentAim
    silentAimButton.Text = "Silent Aim: " .. (States.SilentAim and "ON" or "OFF")
end)

triggerBotButton.MouseButton1Click:Connect(function()
    States.TriggerBot = not States.TriggerBot
    triggerBotButton.Text = "TriggerBot: " .. (States.TriggerBot and "ON" or "OFF")
end)

targetAimButton.MouseButton1Click:Connect(function() -- Nouveau contrôle pour Target Aim
    States.TargetAim = not States.TargetAim
    targetAimButton.Text = "Target Aim: " .. (States.TargetAim and "ON" or "OFF")
end)

-- Contrôles via les touches
UIS.InputBegan:Connect(function(input)
    if input.KeyCode == Settings.Keybinds.ToggleMenu then
        mainFrame.Visible = not mainFrame.Visible
    elseif input.KeyCode == Settings.Keybinds.ToggleAimAssist then
        isTargeting = not isTargeting
        lockedTarget = isTargeting and getClosestPlayer(Settings.AimAssistFOV) or nil
        print("Cible verrouillée (Aim Assist):", lockedTarget and lockedTarget.Name or "Aucune")
    elseif input.KeyCode == Settings.Keybinds.ToggleSilentAim then
        States.SilentAim = not States.SilentAim
        silentAimButton.Text = "Silent Aim: " .. (States.SilentAim and "ON" or "OFF")
        print("Silent Aim:", States.SilentAim and "Activé" or "Désactivé")
    elseif input.KeyCode == Settings.Keybinds.ToggleTriggerBot then
        States.TriggerBot = not States.TriggerBot
        triggerBotButton.Text = "TriggerBot: " .. (States.TriggerBot and "ON" or "OFF")
        print("TriggerBot:", States.TriggerBot and "Activé" or "Désactivé")
    elseif input.KeyCode == Settings.Keybinds.ToggleTargetAim then
        States.TargetAim = not States.TargetAim
        targetAimButton.Text = "Target Aim: " .. (States.TargetAim and "ON" or "OFF")
        print("Target Aim:", States.TargetAim and "Activé" or "Désactivé")
    end
end)
